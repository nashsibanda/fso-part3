{"version":3,"sources":["components/contacts_index_item.js","components/contacts_index.js","components/form.js","components/notification.js","components/search_field.js","services/persons.js","app.js","index.js"],"names":["ContactsIndexItem","person","deleteContact","name","number","onClick","ContactsIndex","persons","map","key","id","NewContactForm","handleSubmit","handleEdit","useState","newName","setNewName","newNumber","setNewNumber","onSubmit","event","preventDefault","includes","window","confirm","existingPerson","find","p","editedPersonObj","alert","style","marginBottom","type","value","onChange","target","Notification","notification","notifColor","color","padding","border","background","notificationStyle","message","SearchField","searchQuery","editSearchQuery","Axios","require","default","baseUrl","get","then","response","data","newContact","post","put","delete","App","setPersons","setSearchQuery","notifications","setNotifications","notifRef","useRef","current","useEffect","personsService","contacts","addNotification","newNotification","notifIds","n","sort","a","b","newNotifId","length","newNotifObj","concat","setTimeout","clearNotification","filter","personsToDisplay","toLocaleLowerCase","newPersonObj","newPerson","addSuccessNotif","existingPersonObj","editedPerson","updateSuccessNotif","catch","error","alreadyDeletedNotif","deletedPerson","deleteSuccessNotif","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.b8dc8a89.chunk.js","sourcesContent":["import React from \"react\";\n\nconst ContactsIndexItem = ({ person, deleteContact }) => (\n  <li>\n    {person.name}: {person.number} -{\" \"}\n    <button onClick={deleteContact(person)}>Delete</button>\n  </li>\n);\n\nexport default ContactsIndexItem;\n","import React from \"react\";\nimport ContactsIndexItem from \"./contacts_index_item\";\n\nconst ContactsIndex = ({ persons, deleteContact }) => (\n  <ul>\n    {persons.map(person => (\n      <ContactsIndexItem\n        person={person}\n        key={person.id}\n        deleteContact={deleteContact}\n      />\n    ))}\n  </ul>\n);\n\nexport default ContactsIndex;\n","import React, { useState } from \"react\";\n\nconst NewContactForm = ({ handleSubmit, persons, handleEdit }) => {\n  const [newName, setNewName] = useState(\"\");\n  const [newNumber, setNewNumber] = useState(\"\");\n  const formStyle = {\n    marginBottom: \"1rem\",\n  };\n\n  const editNewName = ({ target }) => {\n    setNewName(target.value);\n  };\n\n  const editNewNumber = ({ target }) => {\n    setNewNumber(target.value);\n  };\n\n  const validateAndSubmit = event => {\n    event.preventDefault();\n    if (persons.map(person => person.name).includes(newName)) {\n      // alert(`${newName} is already in this phonebook!`);\n      if (\n        window.confirm(\n          `${newName} is already in this phonebook. Replace the number with this one?`\n        )\n      ) {\n        const existingPerson = persons.find(p => p.name === newName);\n        const editedPersonObj = {\n          ...existingPerson,\n          number: newNumber,\n        };\n        handleEdit(editedPersonObj);\n        setNewName(\"\");\n        setNewNumber(\"\");\n      }\n    } else if (newNumber === \"\") {\n      alert(\"Phone number can't be blank!\");\n    } else {\n      const newPersonObj = {\n        name: newName,\n        number: newNumber,\n      };\n      handleSubmit(newPersonObj);\n      setNewName(\"\");\n      setNewNumber(\"\");\n    }\n  };\n\n  return (\n    <form onSubmit={validateAndSubmit} style={formStyle}>\n      <div>\n        name: <input type=\"text\" value={newName} onChange={editNewName} />\n      </div>\n      <div>\n        phone number:{\" \"}\n        <input type=\"text\" value={newNumber} onChange={editNewNumber} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  );\n};\n\nexport default NewContactForm;\n","import React from \"react\";\n\nconst Notification = ({ notification }) => {\n  const notificationStyle = type => {\n    const notifColor =\n      type === \"success\" ? \"green\" : type === \"error\" ? \"red\" : \"blue\";\n    return {\n      color: notifColor,\n      padding: \"0.5rem 1rem\",\n      border: `4px solid ${notifColor}`,\n      background: \"#eee\",\n    };\n  };\n\n  return (\n    notification && (\n      <div style={notificationStyle(notification.type)}>\n        {notification.message}\n      </div>\n    )\n  );\n};\n\nexport default Notification;\n","import React from \"react\";\n\nconst SearchField = ({ searchQuery, editSearchQuery }) => (\n  <div>\n    Search: <input type=\"text\" value={searchQuery} onChange={editSearchQuery} />\n  </div>\n);\n\nexport default SearchField;\n","const { default: Axios } = require(\"axios\");\nconst baseUrl = \"/api/persons\";\n\nconst getAll = () => Axios.get(baseUrl).then(response => response.data);\nconst create = newContact =>\n  Axios.post(baseUrl, newContact).then(response => response.data);\nconst update = (id, newContact) =>\n  Axios.put(`${baseUrl}/${id}`, newContact).then(response => response.data);\nconst remove = id =>\n  Axios.delete(`${baseUrl}/${id}`).then(response => response.data);\n\nexport default { getAll, create, update, remove };\n","import React, { useEffect, useRef, useState } from \"react\";\nimport ContactsIndex from \"./components/contacts_index\";\nimport NewContactForm from \"./components/form\";\nimport Notification from \"./components/notification\";\nimport SearchField from \"./components/search_field\";\nimport personsService from \"./services/persons\";\n\nconst App = () => {\n  const [persons, setPersons] = useState([]);\n  const [searchQuery, setSearchQuery] = useState(\"\");\n  const [notifications, setNotifications] = useState([]);\n  const notifRef = useRef(notifications);\n  notifRef.current = notifications;\n\n  useEffect(() => {\n    personsService.getAll().then(contacts => setPersons(contacts));\n  }, []);\n\n  const addName = newPersonObj => {\n    personsService.create(newPersonObj).then(newPerson => {\n      setPersons(persons.concat(newPerson));\n      const addSuccessNotif = {\n        message: `${newPerson.name} has been successfully added!`,\n        type: \"success\",\n      };\n      addNotification(addSuccessNotif);\n    });\n  };\n\n  const editPerson = existingPersonObj => {\n    personsService\n      .update(existingPersonObj.id, existingPersonObj)\n      .then(editedPerson => {\n        setPersons(\n          persons.map(p =>\n            p.id === existingPersonObj.id ? existingPersonObj : p\n          )\n        );\n        const updateSuccessNotif = {\n          message: `${existingPersonObj.name} has been successfully updated!`,\n          type: \"success\",\n        };\n        addNotification(updateSuccessNotif);\n      })\n      .catch(error => {\n        const alreadyDeletedNotif = {\n          message: `${existingPersonObj.name} was already removed from the server!`,\n          type: \"error\",\n        };\n        addNotification(alreadyDeletedNotif);\n      });\n  };\n\n  const addNotification = newNotification => {\n    const notifIds = notifications.map(n => n.id).sort((a, b) => b - a);\n    const newNotifId = notifIds.length > 0 ? notifIds[0] + 1 : 1;\n    const newNotifObj = { ...newNotification, id: newNotifId };\n    setNotifications(notifications.concat(newNotifObj));\n    setTimeout(() => clearNotification(newNotifId), 5000);\n  };\n\n  const clearNotification = id => {\n    setNotifications(notifRef.current.filter(n => n.id !== id));\n  };\n\n  const deleteContact = person => () => {\n    if (window.confirm(`Do you really want to delete ${person.name}`)) {\n      personsService\n        .remove(person.id)\n        .then(deletedPerson => {\n          setPersons(persons.filter(({ id }) => id !== person.id));\n          const deleteSuccessNotif = {\n            message: `${person.name} has been successfully deleted!`,\n            type: \"success\",\n          };\n          addNotification(deleteSuccessNotif);\n        })\n        .catch(error => {\n          const alreadyDeletedNotif = {\n            message: `${person.name} was already removed from the server!`,\n            type: \"error\",\n          };\n          addNotification(alreadyDeletedNotif);\n        });\n    }\n  };\n\n  const editSearchQuery = ({ target }) => {\n    setSearchQuery(target.value);\n  };\n\n  const personsToDisplay = searchQuery\n    ? persons.filter(person =>\n        person.name.toLocaleLowerCase().includes(searchQuery)\n      )\n    : persons;\n\n  return (\n    <div>\n      <h1>Phonebook</h1>\n      <h2>Add a new contact</h2>\n      <NewContactForm\n        handleSubmit={addName}\n        persons={persons}\n        handleEdit={editPerson}\n      />\n      {notifications.map(n => (\n        <Notification notification={n} key={n.id} />\n      ))}\n      <h2>Numbers</h2>\n      <SearchField\n        searchQuery={searchQuery}\n        editSearchQuery={editSearchQuery}\n      />\n      <ContactsIndex persons={personsToDisplay} deleteContact={deleteContact} />\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./app\";\nimport \"./index.css\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n"],"sourceRoot":""}